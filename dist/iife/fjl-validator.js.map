{"version":3,"file":"fjl-validator.js","sources":["../../src/validationOptions.js","../../src/regexValidator.js","../../src/alnumValidator.js","../../src/digitValidator.js","../../src/notEmptyValidator.js","../../src/stringLengthValidator.js","../../src/generated/version.js","../../src/fjlValidator.js"],"sourcesContent":["/**\n * Created by Ely on 7/21/2014.\n * Initial idea borrowed from Zend Framework 2's Zend/Validator\n * @module validationOptions\n */\nimport {assignDeep, assign, isset,\n    call, isFunction, isString, apply, repeat, curry} from 'fjl';\n\nimport {defineEnumProps$} from 'fjl-mutable';\n\nexport const\n\n    /**\n     * Default value obscurator.\n     * @function module:validationOptions.defaultValueObscurator\n     * @param x {*} - Value to obscurate.\n     * @returns {String} - Obscurated value.\n     */\n    defaultValueObscurator = x => repeat((x + '').length, '*'),\n\n    /**\n     * Gets an error message by `messageTemplates` key from `options` object.\n     * @function module:validationOptions.getErrorMsgByKey\n     * @param options {Object}\n     * @param key {(String|Function)}\n     * @param value {*}\n     * @returns {String|undefined} - Error message if successfully resolved one else `undefined`.\n     * @curried\n     */\n    getErrorMsgByKey = curry((options, key, value) => {\n        let message;\n        const {messageTemplates, valueObscured, valueObscurator} = options,\n            _value = valueObscured ? valueObscurator(value) : value;\n        if (isFunction(key)) {\n            message = call(key, options, _value);\n        }\n        else if (!isString(key) || !messageTemplates[key]) {\n            return;\n        }\n        else if (isFunction(messageTemplates[key])) {\n            message = call(messageTemplates[key], options, _value);\n        }\n        else {\n            message = messageTemplates[key];\n        }\n        return message;\n    }),\n\n    /**\n     * Returns a strongly typed/normalized validationOptions object.\n     * @function module:validationOptions.validationOptions\n     * @param options {...Object}\n     * @returns {Object}\n     */\n    validationOptions = (...options) => {\n        const _options = defineEnumProps$([\n            [Object, 'messageTemplates', {}],\n            [Boolean, 'valueObscured', false],\n            [Function, 'valueObscurator', defaultValueObscurator]\n        ], {});\n        return options.length ?\n            apply(assignDeep, [_options].concat(options.filter(isset))) :\n            _options;\n    },\n\n    /**\n     * Returns a strongly typed, normalized validation result object.\n     * @function module:validationOptions.validationResult\n     * @param options {Object}\n     * @returns {*}\n     */\n    validationResult = options => {\n        const _options = defineEnumProps$([\n            [Boolean, 'result'],\n            [Array, 'messages']\n        ], {});\n        _options.value = undefined;\n        return options ? assign(_options, options) : _options;\n    }\n;\n\nexport default validationResult;\n","/**\n * Created by Ely on 7/21/2014.\n * @module regexValidator\n */\nimport {validationResult, validationOptions, getErrorMsgByKey}\n    from './validationOptions';\nimport {defineEnumProp$} from 'fjl-mutable';\nimport {curry, assignDeep} from 'fjl';\n\nexport const\n\n    /**\n     * @function module:regexValidator.regexValidatorOptions\n     * @param options {Object}\n     * @returns {Object}\n     */\n    regexValidatorOptions = options => {\n        const [_options] = defineEnumProp$(RegExp, {}, 'pattern', /./);\n        _options.messageTemplates = {\n            DOES_NOT_MATCH_PATTERN: (value, ops) =>\n                'The value passed in does not match pattern\"'\n                + ops.pattern + '\".  Value passed in: \"'\n                + ops.value + '\".'\n        };\n        return validationOptions(\n            options ? assignDeep(_options, options) : _options\n        );\n    },\n\n    /**\n     * @function module:regexValidator.regexValidator\n     * @param options {Object}\n     * @param value {*}\n     * @returns {Object}\n     */\n    regexValidator = curry((options, value) => {\n        const ops = regexValidatorOptions(options),\n            result = ops.pattern.test(value),\n\n            // If test failed\n            messages = !result ?\n                [getErrorMsgByKey(ops, 'DOES_NOT_MATCH_PATTERN', value)] :\n                [];\n\n        return validationResult({ result, messages, value });\n    });\n\nexport default regexValidator;\n","/**\n * Created by Ely on 1/21/2015.\n * @module alnumValidator\n */\nimport {regexValidator} from './regexValidator';\nimport {curry, assignDeep} from 'fjl';\n\n/**\n * @function module:alnumValidator.alnumValidator\n * @param options {Object}\n * @param value {*}\n * @returns {Object}\n */\nexport const alnumValidator = curry((options, value) => regexValidator(assignDeep({\n        pattern: /^[\\da-z]+$/i,\n        messageTemplates: {\n            DOES_NOT_MATCH_PATTERN: x =>\n                `Value is not alpha-numeric.  Value received: '${x}'.`\n        }\n    }, options), value));\n\nexport default alnumValidator;\n","/**\n * Created by Ely on 1/21/2015.\n * @module digitValidator\n */\nimport {regexValidator} from './regexValidator';\nimport {curry, assignDeep} from 'fjl';\n\n/**\n * @function module:digitValidator.digitValidator\n * @param options {Object}\n * @param value {*}\n * @returns {Object}\n */\nexport const digitValidator = curry((options, value) => regexValidator(assignDeep({\n        pattern: /^\\d+$/,\n        messageTemplates: {\n            DOES_NOT_MATCH_PATTERN: x =>\n                `The value passed in contains non digital characters.  ` +\n                `Value received: \"${x}\".`\n        }\n    }, options), value));\n\nexport default digitValidator;\n","/**\n * Created by Ely on 7/21/2014.\n * @module notEmptyValidator\n */\nimport {validationResult, validationOptions, getErrorMsgByKey} from './validationOptions';\nimport {isEmpty, curry} from 'fjl';\n\nexport const\n\n    /**\n     * @function module:notEmptyValidator.notEmptyOptions\n     * @param options {Object}\n     * @returns {Object}\n     */\n    notEmptyOptions = options =>\n        validationOptions({\n            messageTemplates: {\n                EMPTY_NOT_ALLOWED: () =>\n                    'Empty values are not allowed.'\n            }\n        }, options),\n\n    /**\n     * @function module:notEmptyValidator.notEmptyValidator\n     * @param options {Object}\n     * @param value {*}\n     * @returns {Object}\n     */\n    notEmptyValidator = curry((options, value) => {\n        const ops = notEmptyOptions(options),\n            result = !isEmpty(value),\n            // If test failed\n            messages = !result ? [getErrorMsgByKey(\n                ops, 'EMPTY_NOT_ALLOWED', value\n            )] : [];\n        return validationResult({result, messages, value});\n    });\n\nexport default notEmptyValidator;\n","/**\n * Created by Ely on 1/21/2015.\n * @module stringLengthValidator\n */\nimport {validationResult, getErrorMsgByKey, validationOptions} from './validationOptions';\nimport {typeOf, isString, assignDeep, curry} from 'fjl';\nimport {defineEnumProps$} from 'fjl-mutable';\n\nexport const\n\n    /**\n     * @function module:stringLengthValidator.stringLengthOptions\n     * @param options {Object}\n     * @returns {Object}\n     */\n    stringLengthOptions = options => {\n        const _options = defineEnumProps$([\n            [Number, 'min', 0],\n            [Number, 'max', Number.MAX_SAFE_INTEGER]\n        ], {});\n\n        _options.messageTemplates = {\n            NOT_OF_TYPE: (value) => `Value is not a String.  ` +\n                `Value type received: ${typeOf(value)}.` +\n                `Value received: \"${value}\".`,\n            NOT_WITHIN_RANGE: (value, ops) => `Value is not within range ` +\n                `${ops.min} to ${ops.max}.` +\n                `Value length given: \"` + value.length + `\".` +\n                `Value received: \"` + value + `\".`\n        };\n\n        return validationOptions(options ? assignDeep(_options, options) : _options);\n    },\n\n    /**\n     * @function module:stringLengthValidator.stringLengthValidator\n     * @param options {Object}\n     * @value {*}\n     * @returns {Object}\n     */\n    stringLengthValidator = curry((options, value) => {\n        const ops = stringLengthOptions(options),\n            messages = [],\n            isOfType = isString(value),\n            valLength = isOfType ? value.length : 0,\n            isWithinRange = valLength >= ops.min && valLength <= ops.max;\n        if (!isOfType) {\n            messages.push(getErrorMsgByKey('NOT_OF_TYPE', value, ops));\n        }\n        else if (!isWithinRange) {\n            messages.push(getErrorMsgByKey('NOT_WITHIN_RANGE', value, ops));\n        }\n        return validationResult({\n            result: isOfType && isWithinRange,\n            messages,\n            value\n        });\n    });\n\nexport default stringLengthValidator;\n","/**\n * Content generated by '{project-root}/build-scripts/VersionNumberReadStream.js'.\n * Generated Sat Dec 16 2017 18:10:15 GMT-0500 (EST) \n */\n \nexport const version = '0.5.3';\n\nexport default version;\n\n","/**\n * @module fjlValidator\n */\nexport * from './alnumValidator';\nexport * from './digitValidator';\nexport * from './notEmptyValidator';\nexport * from './regexValidator';\nexport * from './stringLengthValidator';\nexport * from './validationOptions';\nexport * from './generated/version';\n"],"names":["defaultValueObscurator","repeat","x","length","getErrorMsgByKey","curry","options","key","value","message","messageTemplates","valueObscured","valueObscurator","_value","isFunction","call","isString","validationOptions","_options","defineEnumProps$","Object","Boolean","Function","apply","assignDeep","concat","filter","isset","validationResult","Array","undefined","assign","regexValidatorOptions","defineEnumProp$","RegExp","ops","pattern","regexValidator","result","test","messages","alnumValidator","digitValidator","notEmptyOptions","notEmptyValidator","isEmpty","stringLengthOptions","Number","MAX_SAFE_INTEGER","typeOf","min","max","stringLengthValidator","isOfType","valLength","isWithinRange","push","version"],"mappings":";;;AAAA;;;;;AAKA,AAKO,IAQHA,yBAAyB,SAAzBA,sBAAyB;WAAKC,WAAO,CAACC,IAAI,EAAL,EAASC,MAAhB,EAAwB,GAAxB,CAAL;CARtB;IAmBHC,mBAAmBC,UAAM,UAACC,OAAD,EAAUC,GAAV,EAAeC,KAAf,EAAyB;QAC1CC,gBAAJ;;QACOC,gBAFuC,GAEaJ,OAFb,CAEvCI,gBAFuC;QAErBC,aAFqB,GAEaL,OAFb,CAErBK,aAFqB;QAENC,eAFM,GAEaN,OAFb,CAENM,eAFM;QAG1CC,MAH0C,GAGjCF,gBAAgBC,gBAAgBJ,KAAhB,CAAhB,GAAyCA,KAHR;;QAI1CM,eAAWP,GAAX,CAAJ,EAAqB;kBACPQ,SAAKR,GAAL,EAAUD,OAAV,EAAmBO,MAAnB,CAAV;KADJ,MAGK,IAAI,CAACG,aAAST,GAAT,CAAD,IAAkB,CAACG,iBAAiBH,GAAjB,CAAvB,EAA8C;;KAA9C,MAGA,IAAIO,eAAWJ,iBAAiBH,GAAjB,CAAX,CAAJ,EAAuC;kBAC9BQ,SAAKL,iBAAiBH,GAAjB,CAAL,EAA4BD,OAA5B,EAAqCO,MAArC,CAAV;KADC,MAGA;kBACSH,iBAAiBH,GAAjB,CAAV;;WAEGE,OAAP;CAhBe,CAnBhB;IA4CHQ,oBAAoB,SAApBA,iBAAoB,GAAgB;sCAAZX,OAAY;eAAA;;;QAC1BY,WAAWC,4BAAiB,CAC9B,CAACC,MAAD,EAAS,kBAAT,EAA6B,EAA7B,CAD8B,EAE9B,CAACC,OAAD,EAAU,eAAV,EAA2B,KAA3B,CAF8B,EAG9B,CAACC,QAAD,EAAW,iBAAX,EAA8BtB,sBAA9B,CAH8B,CAAjB,EAId,EAJc,CAAjB;WAKOM,QAAQH,MAAR,GACHoB,UAAMC,cAAN,EAAkB,CAACN,QAAD,EAAWO,MAAX,CAAkBnB,QAAQoB,MAAR,CAAeC,SAAf,CAAlB,CAAlB,CADG,GAEHT,QAFJ;CAlDD;IA6DHU,mBAAmB,SAAnBA,gBAAmB,UAAW;QACpBV,WAAWC,4BAAiB,CAC9B,CAACE,OAAD,EAAU,QAAV,CAD8B,EAE9B,CAACQ,KAAD,EAAQ,UAAR,CAF8B,CAAjB,EAGd,EAHc,CAAjB;aAISrB,KAAT,GAAiBsB,SAAjB;WACOxB,UAAUyB,WAAOb,QAAP,EAAiBZ,OAAjB,CAAV,GAAsCY,QAA7C;CAnED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVP;;;;AAIA,AAKO,IAOHc,wBAAwB,SAAxBA,qBAAwB,UAAW;2BACZC,2BAAgBC,MAAhB,EAAwB,EAAxB,EAA4B,SAA5B,EAAuC,GAAvC,CADY;;QACxBhB,QADwB;;aAEtBR,gBAAT,GAA4B;gCACA,gCAACF,KAAD,EAAQ2B,GAAR;mBACpB,gDACEA,IAAIC,OADN,GACgB,wBADhB,GAEED,IAAI3B,KAFN,GAEc,IAHM;;KAD5B;WAMOS,kBACHX,UAAUkB,eAAWN,QAAX,EAAqBZ,OAArB,CAAV,GAA0CY,QADvC,CAAP;CAfD;IA0BHmB,iBAAiBhC,UAAM,UAACC,OAAD,EAAUE,KAAV,EAAoB;QACjC2B,MAAMH,sBAAsB1B,OAAtB,CAAZ;QACIgC,SAASH,IAAIC,OAAJ,CAAYG,IAAZ,CAAiB/B,KAAjB,CADb;;;;eAIe,CAAC8B,MAAD,GACP,CAAClC,iBAAiB+B,GAAjB,EAAsB,wBAAtB,EAAgD3B,KAAhD,CAAD,CADO,GAEP,EANR;;WAQOoB,iBAAiB,EAAEU,cAAF,EAAUE,kBAAV,EAAoBhC,YAApB,EAAjB,CAAP;CATa,CA1Bd;;ACTP;;;;AAIA,AAGA;;;;;;AAMA,AAAO,IAAMiC,iBAAiBpC,UAAM,UAACC,OAAD,EAAUE,KAAV;SAAoB6B,eAAeb,eAAW;aACjE,aADiE;sBAExD;8BACU;mEAC6BtB,CAD7B;;;GAHmC,EAMhEI,OANgE,CAAf,EAMvCE,KANuC,CAApB;CAAN,CAAvB;;ACbP;;;;AAIA,AAGA;;;;;;AAMA,AAAO,IAAMkC,iBAAiBrC,UAAM,UAACC,OAAD,EAAUE,KAAV;SAAoB6B,eAAeb,eAAW;aACjE,OADiE;sBAExD;8BACU;eACpB,kFACoBtB,CADpB,QADoB;;;GAHmC,EAOhEI,OAPgE,CAAf,EAOvCE,KAPuC,CAApB;CAAN,CAAvB;;ACbP;;;;AAIA,AAGO,IAOHmC,kBAAkB,SAAlBA,eAAkB;WACd1B,kBAAkB;0BACI;+BACK;uBACf,+BADe;;;KAF3B,EAKGX,OALH,CADc;CAPf;IAqBHsC,oBAAoBvC,UAAM,UAACC,OAAD,EAAUE,KAAV,EAAoB;QACpC2B,MAAMQ,gBAAgBrC,OAAhB,CAAZ;QACIgC,SAAS,CAACO,YAAQrC,KAAR,CADd;;;eAGe,CAAC8B,MAAD,GAAU,CAAClC,iBAClB+B,GADkB,EACb,mBADa,EACQ3B,KADR,CAAD,CAAV,GAEN,EALT;WAMOoB,iBAAiB,EAACU,cAAD,EAASE,kBAAT,EAAmBhC,YAAnB,EAAjB,CAAP;CAPgB,CArBjB;;ACPP;;;;AAIA,AAIO,IAOHsC,sBAAsB,SAAtBA,mBAAsB,UAAW;QACvB5B,WAAWC,4BAAiB,CAC9B,CAAC4B,MAAD,EAAS,KAAT,EAAgB,CAAhB,CAD8B,EAE9B,CAACA,MAAD,EAAS,KAAT,EAAgBA,OAAOC,gBAAvB,CAF8B,CAAjB,EAGd,EAHc,CAAjB;;aAKStC,gBAAT,GAA4B;qBACX,qBAACF,KAAD;mBAAW,wDACIyC,WAAOzC,KAAP,CADJ,iCAEAA,KAFA,QAAX;SADW;0BAIN,0BAACA,KAAD,EAAQ2B,GAAR;mBAAgB,gCAC3BA,IAAIe,GADuB,YACbf,IAAIgB,GADS,oCAEJ3C,MAAML,MAFF,gCAGRK,KAHQ,OAAhB;;KAJtB;;WAUOS,kBAAkBX,UAAUkB,eAAWN,QAAX,EAAqBZ,OAArB,CAAV,GAA0CY,QAA5D,CAAP;CAvBD;IAgCHkC,wBAAwB/C,UAAM,UAACC,OAAD,EAAUE,KAAV,EAAoB;QACxC2B,MAAMW,oBAAoBxC,OAApB,CAAZ;QACIkC,WAAW,EADf;QAEIa,WAAWrC,aAASR,KAAT,CAFf;QAGI8C,YAAYD,WAAW7C,MAAML,MAAjB,GAA0B,CAH1C;QAIIoD,gBAAgBD,aAAanB,IAAIe,GAAjB,IAAwBI,aAAanB,IAAIgB,GAJ7D;QAKI,CAACE,QAAL,EAAe;iBACFG,IAAT,CAAcpD,iBAAiB,aAAjB,EAAgCI,KAAhC,EAAuC2B,GAAvC,CAAd;KADJ,MAGK,IAAI,CAACoB,aAAL,EAAoB;iBACZC,IAAT,CAAcpD,iBAAiB,kBAAjB,EAAqCI,KAArC,EAA4C2B,GAA5C,CAAd;;WAEGP,iBAAiB;gBACZyB,YAAYE,aADA;0BAAA;;KAAjB,CAAP;CAZoB,CAhCrB;;ACRP;;;;;AAKA,AAAO,IAAME,UAAU,OAAhB;;ACLP;;;;;;;;;;;;;;;;;;;;;;;;"}